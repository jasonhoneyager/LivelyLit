@model ProjectManager.Models.ProjectModels

@{
    ViewBag.Title = "Edit";
}

<h2>Change Project Status</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @*<h4>ProjectModels</h4>*@
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)
        @Html.HiddenFor(model => model.projectName)
        @Html.HiddenFor(model => model.projectClientID)
        @Html.HiddenFor(model => model.projectDescription)
        @Html.HiddenFor(model => model.projectRequestedDueDate)
        @Html.HiddenFor(model => model.projectOfferedPaymentAmount)
        @Html.HiddenFor(model => model.projectPaymentMethodID)
        <dl class="dl-horizontal">

            <dt>
                @Html.DisplayNameFor(model => model.projectClientID)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.projectClientID)
            </dd>
            
            <dt>
                @Html.DisplayNameFor(model => model.projectName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.projectName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.projectDescription)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.projectDescription)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.projectRequestedDueDate)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.projectRequestedDueDate)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.projectOfferedPaymentAmount)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.projectOfferedPaymentAmount)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.PaymentMethod.projectPaymentMethod)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.PaymentMethod.projectPaymentMethod)
            </dd>

        </dl>
        @*<div class="form-group">
            @Html.LabelFor(model => model.projectName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.projectName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.projectName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.projectClientID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.projectClientID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.projectClientID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.projectDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.projectDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.projectDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.projectRequestedDueDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.projectRequestedDueDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.projectRequestedDueDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.projectOfferedPaymentAmount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.projectOfferedPaymentAmount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.projectOfferedPaymentAmount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.projectPaymentMethodID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("projectPaymentMethodID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.projectPaymentMethodID, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.projectCategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("projectCategoryID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.projectCategoryID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.projectStatusID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("projectStatusID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.projectStatusID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Return to Project Calendar", "ProjectCalendar")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

    <script type="text/javascript">

         $(document).ready(function () {
             $('input[type=datetime]').datepicker({
                 dateFormat: "mm/dd/yy",
                 changeMonth: true,
                 changeYear: true,
                 yearRange: "-0:+10"
             });

         });
    </script> 
}
